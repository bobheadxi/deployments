on:
  push:

jobs:
  deploy-success:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12'

    - name: Extract branch name
      id: get_branch
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / -)"

    - name: start deployment
      uses: ./
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        env: succeed-${{ steps.get_branch.outputs.branch }}

    - run: exit 0

    - run: sleep 30s
      shell: bash

    - name: update deployment status
      uses: ./
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - run: sleep 30s
      shell: bash

    - name: mark environment as deactivated
      uses: ./
      if: always()
      with:
        step: deactivate-env
        token: ${{ secrets.GITHUB_TOKEN }}
        env: succeed-${{ steps.get_branch.outputs.branch }}
        desc: Deployment was pruned

  deploy-failure:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12'

    - name: Extract branch name
      id: get_branch
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / -)"

    - name: start deployment
      uses: ./
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        env: fail-${{ steps.get_branch.outputs.branch }}

    - run: exit 1

    - run: sleep 30s
      if: always()
      shell: bash

    - name: update deployment status
      uses: ./
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - run: sleep 30s
      shell: bash

    - name: mark environment as deactivated
      uses: ./
      if: always()
      with:
        step: deactivate-env
        token: ${{ secrets.GITHUB_TOKEN }}
        env: fail-${{ steps.get_branch.outputs.branch }}
        desc: Deployment was pruned
